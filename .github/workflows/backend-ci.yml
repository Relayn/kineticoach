# .github/workflows/backend-ci.yml
name: Backend CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths:
      - 'backend/**' # Запускать только если изменения в папке backend

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 3. Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: 4. Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: backend/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: 5. Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: 6. Run linters and formatters
        run: |
          poetry run ruff check .
          poetry run ruff format --check .

      - name: 7. Run static type checker
        run: poetry run mypy src tests

      - name: 8. Run security scanner
        run: poetry run bandit -c pyproject.toml -r src tests

      - name: 9. Run tests
        run: poetry run pytest
        env:
          PYTHONPATH: ./src
